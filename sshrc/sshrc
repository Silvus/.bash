#!/bin/sh
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../../'

mkcd() { mkdir -p "$@" && cd "$_"; }

alias l='ls -lhaF --color=always --group-directories-first'

alias doublons='find -not -empty -type f -printf "%s\n" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate'
alias process='ps aux | grep'

# Extract a package without pain
# -----------------------------------------------------------------------------
extract() {
	if [[ -f "$1" ]]; then
		case "$1" in
			(*.7z) 7z x "$1" ;;
			(*.lzma) unlzma "$1" ;;
			(*.rar) unrar x "$1" ;;
			(*.tar) tar xvf "$1" ;;
			(*.tar.bz2) tar xvjf "$1" ;;
			(*.bz2) bunzip2 "$1" ;;
			(*.tar.gz) tar xvzf "$1" ;;
			(*.gz) gunzip "$1" ;;
			(*.tar.xz) tar Jxvf "$1" ;;
			(*.xz) xz -d "$1" ;;
			(*.tbz2) tar xvjf "$1" ;;
			(*.tgz) tar xvzf "$1" ;;
			(*.zip) unzip "$1" ;;
			(*.Z) uncompress ;;
			(*) echo "Don't know how to extract $1"	;;
		esac
	else
		echo "Error: "$1" is not a valid file"
	fi
}

# Make a package without pain
# -----------------------------------------------------------------------------
mktar() {
	local target=${1%/}
	if [[ -f "$target" || -d "$target" ]]; then
		tar -zcvf "${target}_$(date +%Y%m%d).tar.gz" "$target"
	else
		echo "Error: $target is not valid "
	fi
}

mkgz() {
	local target=${1%/} # Remove trailing slash
	if [[ -f "$target" || -d "$target" ]]; then
		gzip "$target"
	else
		echo "Error: $target is not valid "
	fi
}

mkzip() {
	local target=${1%/} # Remove trailing slash
	if [[ -f "$target" || -d "$target" ]]; then
		zip -r "${target}_$(date +%Y%m%d).zip" "$target"
	else
		echo "Error: $target is not valid "
	fi
}

savefile() {
	cp -v "$1" "${1}_$(date +%Y%m%d).bak"
}

# Quick search in a directory for a string ($1).
# -----------------------------------------------------------------------------
search() {
	if [[ -x "/usr/bin/ack-grep" ]]; then
		ack-grep "$1" .
	else
		grep -rnI --exclude-dir=dir --color=always "$1" .
	fi
}

# Prompt
# -----------------------------------------------------------------------------
TXTRED=$(tput setaf 1)
TXTGREEN=$(tput setaf 2)
TXTYELLOW=$(tput setaf 3)
TXTBLUE=$(tput setaf 4)
TXTRESET=$(tput sgr0)

PS1='\n┌─[\[$TXTGREEN\]\D{%T}\[$TXTRESET\]]-[\[$TXTGREEN\]\u\[$TXTYELLOW\]@\[$TXTRED\]\h\[$TXTRESET\]]\n└─[\[$TXTBLUE\]\w\[$TXTRESET\]] \$ '

# Ascii
# -----------------------------------------------------------------------------
_asciiart() {
	echo ''
	echo "${TXTBLUE} Welcome to ${TXTRED}$(hostname -s)${TXTBLUE} "
	echo "      ${TXTBLUE}-----${TXTGREEN}                    "
	echo "        ${TXTBLUE}\\${TXTGREEN}"'   ^__^               '
	echo "         ${TXTBLUE}\\${TXTGREEN}"'  (oo)\_______       '
	echo '            (__)\       )\/\   '
	echo '                ||----w |      '
	echo '                ||     ||      '
	echo "$TXTRESET"
}
_asciiart
