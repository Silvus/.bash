# Tmux config
# ---------------------------------------------------------------------------

# Version-specific commands
# See:
# - https://github.com/tmux/tmux/blob/master/CHANGES
# - https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
	"set -g utf8 on; set -g status-utf8 on;"

if-shell -b '[ "$(echo "$TMUX_VERSION <= 1.8" | bc)" = 1 ]' \
	"set-option -g visual-content off; set-window-option -g monitor-content on; set-option -g bell-action none"

# Colors / Vim keybindings fix
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"
set -g xterm-keys on
set-window-option -g xterm-keys on

# tmux windows are limited to the size of the smallest client
set-window-option -g aggressive-resize on

# History
set -g history-limit 10000

# Start window numbers at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Renumber the windows after any window is closed
set -g renumber-windows on

# Monitoring
set-option -g visual-activity off # Show message "Activity on window n"
set-option -g visual-bell off # Don't show a message on a bell
set-option -g visual-silence off
set -g monitor-activity on

# tmux clock
set -g clock-mode-style 24
set -g clock-mode-colour green

# Fix delay (switching vim modes)
set -sg escape-time 0

# Bindings
# ---------------------------------------------------------------------------
# Prefix : CTRL + a
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Reload ~/.tmux.conf
bind R source-file ~/.tmux.conf \; display " Reloaded ! "

#Â Rename window
bind r command-prompt "rename-window %%"

# Send panel to new window
bind-key b break-pane
# Move the current pane into a new pane in window
# bind-key s command-prompt -p "Send pane to:"  "join-pane -t '%%'"
# Move window into a new pane in the current window
bind-key j command-prompt -p "Join pane from:"  "join-pane -s '%%'"

# Swap windows positions
bind-key J command-prompt -p "Move window to:" "swap-window -t '%1'"

# Copy mode
setw -g mode-keys vi
unbind [
bind Escape copy-mode
# Begin selection (as in Vim)
bind-key -t vi-copy v begin-selection
# Copy with y
bind-key -t vi-copy y copy-selection
# Paste
unbind p
bind p paste-buffer
# Home and End keys
bind-key -t vi-copy Home start-of-line
bind-key -t vi-copy End end-of-line
# Ctrl + arrows
bind-key -t vi-copy C-Left previous-word
bind-key -t vi-copy C-Right next-word

# Splitting with "h" and "v" (and stay in current path)
unbind %
bind h split-window -v -c "#{pane_current_path}"
bind-key H command-prompt -p "Open horizontal panel command:" "split-window -v '%1' -c '#{pane_current_path}'"
unbind '"'
bind v split-window -h -c "#{pane_current_path}"
bind-key V command-prompt -p "Open vertical panel command:" "split-window -h '%1' -c "#{pane_current_path}""

# Panel switching with Alt+arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Panel layout
bind-key m select-layout main-vertical
bind-key M select-layout even-horizontal

# Kill panel
bind-key x kill-pane
# Kill windows
unbind &
bind-key X kill-window
# Kill server
bind k confirm kill-server

# Colon :
bind : command-prompt

# Opening command in new window
# bind-key C command-prompt -p "Window name:" "new-window -n '%1'"
bind-key C command-prompt -p "Command:" "if-shell '[ -n \"%%\" ]' 'new-window -n \"%1\" \"%1\"'"

# Opening new windows to remote hosts
bind-key s command-prompt -p "SSH to Host:" "if-shell '[ -n \"%%\" ]' 'new-window -n \"%1\" \"ssh %1\"'"
bind-key S command-prompt -p "SSHRC to Host:" "if-shell '[ -n \"%%\" ]' 'new-window -n \"%1\" \"sshrc %1\"'"

# Menu of URLs to open from the visible pane
bind-key u capture-pane \;\
    save-buffer /tmp/tmux-buffer \;\
    split-window -l 10 "urlview /tmp/tmux-buffer"

# Status bar
# ---------------------------------------------------------------------------
# Bar
set -g status-position top
set -g status-attr default
set -g status-interval 10 # set update frequencey (default 15 seconds)
set-option -g status-bg default # Transparent
set -g status-fg white

# Message
set-option -g message-bg green
set-option -g message-fg black
set -g message-attr bright
set -g message-attr dim # no bold
set -g display-time 5000

# Windows
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg white
# set-window-option -g window-status-activity-attr reverse
# set-window-option -g window-status-activity-attr bold
set-window-option -g window-status-activity-attr none
# set-window-option -g window-status-activity-style "fg=#8ae234,bg=black"

set-window-option -g window-status-format "#{?window_activity_flag,#[fg=white]#[bg=blue],#[fg=black]#[bg=green]} #I #[bg=black]#[fg=white] #W #[default]"
set-window-option -g window-status-current-format "#[fg=white]#[bg=green] #I #[bg=white]#[fg=black] #W #[default]"

# Status bar left content
# set -g status-left-length 50
set -g status-left ''

# Status bar right content
set -g status-right-length 80
if-shell '[ -f "$HOME/.dotfiles/bin/statusbar" ]' \
    'set -g status-right "#(~/.dotfiles/bin/statusbar -o tmux)"'\
    'set -g status-right "#(if [ -f \"$HOME/.mail_check\" ]; then cat \"$HOME/.mail_check\"; fi) #[bg=black]#[fg=white] #(hostname  -I | cut -f1 -d\" \") #[fg=black]#[bg=green] #H #[default] #[bg=black]#[fg=white] %a %d %b #[fg=black]#[bg=green] %H:%M #[default]"'
